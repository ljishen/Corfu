// automatically generated by the FlatBuffers compiler, do not modify

package edu.ucsc.soe.srl;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class Range extends Table {
  public static Range getRootAsRange(ByteBuffer _bb) { return getRootAsRange(_bb, new Range()); }
  public static Range getRootAsRange(ByteBuffer _bb, Range obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; }
  public Range __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public long from() { int o = __offset(4); return o != 0 ? bb.getLong(o + bb_pos) : 0L; }
  public long to() { int o = __offset(6); return o != 0 ? bb.getLong(o + bb_pos) : 0L; }
  public Extent extent(int j) { return extent(new Extent(), j); }
  public Extent extent(Extent obj, int j) { int o = __offset(8); return o != 0 ? obj.__assign(__indirect(__vector(o) + j * 4), bb) : null; }
  public int extentLength() { int o = __offset(8); return o != 0 ? __vector_len(o) : 0; }

  public static int createRange(FlatBufferBuilder builder,
      long from,
      long to,
      int extentOffset) {
    builder.startObject(3);
    Range.addTo(builder, to);
    Range.addFrom(builder, from);
    Range.addExtent(builder, extentOffset);
    return Range.endRange(builder);
  }

  public static void startRange(FlatBufferBuilder builder) { builder.startObject(3); }
  public static void addFrom(FlatBufferBuilder builder, long from) { builder.addLong(0, from, 0L); }
  public static void addTo(FlatBufferBuilder builder, long to) { builder.addLong(1, to, 0L); }
  public static void addExtent(FlatBufferBuilder builder, int extentOffset) { builder.addOffset(2, extentOffset, 0); }
  public static int createExtentVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startExtentVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static int endRange(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
}

