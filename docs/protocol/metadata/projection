===================================================================
Data Structure
===================================================================

table Replica {
  // Include
  from:ulong;

  // Exclude
  to:ulong;

  // The network addr of this storage device.
  addr:string;
}

table Extent {
  replicas:[Replica];
}

table Range {
  // Include
  from:ulong;

  // Exclude
  to:ulong;

  extents:[Extent];
}

table Section {
  // Each section has an independent epoch which starts from 0
  epoch:ulong = 0 (required);

  // The least "from" in all ranges of this section.
  // This field is just used for fast indexing.
  from:ulong;

  // The greatest "to" in all ranges of this section.
  // This field is just used for fast indexing.
  to:ulong;

  // Initially, each section only has one range.
  ranges: [Range];
}

table Projection {
  sections:[Section];

  // The maximal written position in the log reported by
  // storage devices.
  moffset:ulong;
}

root_type Projection;

===================================================================




===================================================================
Functions
===================================================================

// @return: NULL or the associated section
Operation sectionOf(offset)


Operation replace(o_section, n_section) {
    if (o_section.epoch < n_section.epoch)
        remove(o_section)
        insert(n_section)
}


// (Offload) Translate the ESP logical addr (ela)
// to ESP physical addr (epa).
Operation parse(offset, replica_idx) {
    <range, idx> = isOf(offset)
    return (offset - range.from) / len(range.extents) +
                range.extents[idx].replicas[replica_idx].from
}

===================================================================